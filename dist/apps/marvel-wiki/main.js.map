{"version":3,"sources":["./app/app.tsx","./app/components/character-list.tsx","./app/components/nav-bar.tsx","./app/queries/index.ts","./assets/logo.png","./main.tsx"],"names":["Uri","client","ApolloClient","uri","cache","InMemoryCache","theme","createMuiTheme","palette","primary","main","secondary","amber","App","useStyles","makeStyles","root","display","flexWrap","justifyContent","overflow","backgroundColor","background","paper","gridList","width","height","icon","color","CharacterList","classes","loading","error","data","characterList","useQuery","GET_CHARACTERS","avatar","thumbnail","path","extension","characters","map","character","od","name","flexGrow","img","Navbar","logo","gql","ReactDOM","render","document","getElementById"],"mappings":"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","file":"main.js","sourcesContent":["\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport Navbar from './components/nav-bar';\nimport CharacterList from './components/character-list';\nconst Uri = '/graphql';\nconst client = new ApolloClient({\n  uri: Uri,\n  cache: new InMemoryCache()\n});\n\nconst theme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        main: '#ff0519',\n      },\n      secondary: amber,\n    },\n  }\n);\n\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>  \n        <Navbar />\n        <div className=\"content\">\n          <CharacterList />\n        </div>\n      </ApolloProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { useQuery } from '@apollo/client';\nimport { Avatar } from '@marvel-wiki/api-interfaces';\nimport { GET_CHARACTERS } from '../queries'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: 500,\n        height: 450,\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\nexport interface CharacterListProps {\n\n}\n\nconst CharacterList: React.SFC<CharacterListProps> = () => {\n    const classes = useStyles();\n    const { loading, error, data: characterList } = useQuery(GET_CHARACTERS);\n    const avatar = (thumbnail: Avatar): string => `${thumbnail.path}.${thumbnail.extension}`\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={300} spacing={0} cols={5}>\n                {characterList?.characters.map((character) => (\n                    <GridListTile key={character.od}>\n                        <img src={ avatar(character.thumbnail) } />\n                        <GridListTileBar\n                            title={character.name}\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div >\n    );\n}\n\nexport default CharacterList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport logo from '../../assets/logo.png';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    img: {\n        width: 150,\n        height: 30\n    }\n}));\n\nconst Navbar = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <img src={ logo } alt=\"\" className={ classes.img }/>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Navbar;","import { gql } from '@apollo/client';\nconst GET_CHARACTERS = gql`\n  {\n    characters {\n        id\n        name\n        thumbnail {\n            path\n            extension\n        }\n    }\n  }\n`\n\n\nexport {\n    GET_CHARACTERS\n}","module.exports = __webpack_public_path__ + \"logo.08ca569.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":"webpack:///"}