{"version":3,"sources":["./app/app.tsx","./app/components/character-detail.tsx","./app/components/character-list.tsx","./app/components/nav-bar.tsx","./app/queries/index.ts","./assets/logo.png","./main.tsx"],"names":["Uri","client","ApolloClient","uri","cache","InMemoryCache","theme","createMuiTheme","palette","primary","main","secondary","amber","App","CharacterList","CharacterDetail","id","useParams","useStyles","makeStyles","root","display","flexWrap","justifyContent","overflow","backgroundColor","background","paper","gridList","width","height","icon","color","classes","useTheme","matchesXSmall","useMediaQuery","breakpoints","down","matchesSmall","matchesMedium","loading","error","data","characterList","useQuery","GET_CHARACTERS","avatar","thumbnail","path","extension","getCols","characters","map","character","name","createStyles","flexGrow","title","search","position","borderRadius","shape","fade","common","white","marginLeft","spacing","searchIcon","padding","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transition","transitions","create","up","Navbar","logo","input","gql","ReactDOM","render","document","getElementById"],"mappings":"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","file":"main.js","sourcesContent":["\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport Navbar from './components/nav-bar';\nimport CharacterList from './components/character-list';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CharacterDetail from './components/character-detail';\nconst Uri = '/graphql';\nconst client = new ApolloClient({\n  uri: Uri,\n  cache: new InMemoryCache()\n});\n\nconst theme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        main: '#ff0519',\n      },\n      secondary: amber,\n    },\n  }\n);\n\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <Router>\n          <Navbar />\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\" component={CharacterList} />\n              <Route path=\"/character/:id\" component={CharacterDetail} />\n            </Switch>\n          </div>\n        </Router>\n      </ApolloProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nexport interface CharacterDetailProps {\n    \n}\n \nconst CharacterDetail: React.SFC<CharacterDetailProps> = () => {\n    const { id } = useParams();\n    return (\n        <div>Details: { id }</div>\n    );\n}\n \nexport default CharacterDetail;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { useQuery } from '@apollo/client';\nimport { Avatar } from '@marvel-wiki/api-interfaces';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { GET_CHARACTERS } from '../queries'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: 500,\n        height: 450,\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\nexport interface CharacterListProps {}\n\nconst CharacterList: React.SFC<CharacterListProps> = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchesXSmall = useMediaQuery(theme.breakpoints.down('xs'));\n    const matchesSmall = useMediaQuery(theme.breakpoints.down('sm'));\n    const matchesMedium = useMediaQuery(theme.breakpoints.down('md'));    \n    const { loading, error, data: characterList } = useQuery(GET_CHARACTERS);\n    const avatar = (thumbnail: Avatar): string => `${thumbnail.path}.${thumbnail.extension}`\n    const getCols = () => {\n        if(matchesXSmall) { return 2; }\n        if(matchesSmall) { return 3; }\n        if(matchesMedium) { return 6; }\n        return 8;\n    }\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={300} spacing={0} cols={ getCols() }>\n                <GridListTile key=\"Subheader\" cols={ getCols()} style={{ height: 'auto' }}></GridListTile>\n                {characterList?.characters.map((character) => (\n                    <GridListTile key={character.id}>\n                        <img src={ avatar(character.thumbnail) } />\n                        <GridListTileBar\n                            title={character.name}                            \n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div >\n    );\n}\n\nexport default CharacterList;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { createStyles, fade, Theme, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport logo from '../../assets/logo.png';\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        title: {\n            display: 'block',\n            width: 150,\n            height: 30\n        },\n        search: {\n            position: 'relative',\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade(theme.palette.common.white, 0.15),\n            '&:hover': {\n                backgroundColor: fade(theme.palette.common.white, 0.25),\n            },\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 0),\n            // vertical padding + font size from searchIcon\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create('width'),\n            width: '100%',\n            [theme.breakpoints.up('sm')]: {\n                width: '12ch',\n                '&:focus': {\n                    width: '20ch',\n                },\n            },\n        },\n    }),\n);\nconst Navbar = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <img className={classes.title} src={logo} />\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Navbar;","import { gql } from '@apollo/client';\nconst GET_CHARACTERS = gql`\n  {\n    characters {\n        id\n        name\n        thumbnail {\n            path\n            extension\n        }\n    }\n  }\n`\n\n\nexport {\n    GET_CHARACTERS\n}","module.exports = __webpack_public_path__ + \"logo.08ca569.png\";","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":"webpack:///"}